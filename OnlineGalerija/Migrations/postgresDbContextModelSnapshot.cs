// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OnlineGalerija.PostgresModels;

namespace OnlineGalerija.Migrations
{
    [DbContext(typeof(postgresDbContext))]
    partial class postgresDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "English_United Kingdom.1252")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("OnlineGalerija.PostgresModels.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("date")
                        .HasColumnName("created_at");

                    b.Property<int?>("PostId")
                        .HasColumnType("integer")
                        .HasColumnName("post_id");

                    b.Property<string>("Text")
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)")
                        .HasColumnName("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("comment");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.Hashtag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Text")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("text");

                    b.HasKey("Id");

                    b.ToTable("hashtag");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("ImageData")
                        .HasColumnType("bytea")
                        .HasColumnName("image_data");

                    b.Property<int?>("PostId")
                        .HasColumnType("integer")
                        .HasColumnName("post_id");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("image");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("date")
                        .HasColumnName("created_at");

                    b.Property<string>("Text")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("text");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("date")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("post");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.PostHashtag", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("integer")
                        .HasColumnName("post_id");

                    b.Property<int>("HashtagId")
                        .HasColumnType("integer")
                        .HasColumnName("hashtag_id");

                    b.HasKey("PostId", "HashtagId")
                        .HasName("post_hashtag_pkey");

                    b.HasIndex("HashtagId");

                    b.ToTable("post_hashtag");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.Reaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("ReactionImageData")
                        .HasColumnType("bytea")
                        .HasColumnName("reaction_image_data");

                    b.Property<string>("ReactionName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("reaction_name");

                    b.HasKey("Id");

                    b.ToTable("reaction");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("role");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("date")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("NameSurname")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name_surname");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("ProfilePhotoData")
                        .HasColumnType("bytea")
                        .HasColumnName("profile_photo_data");

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("date")
                        .HasColumnName("updated_at");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.UserFollower", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<int>("FollowerId")
                        .HasColumnType("integer")
                        .HasColumnName("follower_id");

                    b.HasKey("UserId", "FollowerId")
                        .HasName("user_follower_pkey");

                    b.HasIndex("FollowerId");

                    b.ToTable("user_follower");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.UserReactionComment", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<int>("CommentId")
                        .HasColumnType("integer")
                        .HasColumnName("comment_id");

                    b.Property<int?>("ReactionId")
                        .HasColumnType("integer")
                        .HasColumnName("reaction_id");

                    b.HasKey("UserId", "CommentId")
                        .HasName("user_reaction_comment_pkey");

                    b.HasIndex("CommentId");

                    b.ToTable("user_reaction_comment");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.UserReactionPost", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<int>("PostId")
                        .HasColumnType("integer")
                        .HasColumnName("post_id");

                    b.Property<int?>("ReactionId")
                        .HasColumnType("integer")
                        .HasColumnName("reaction_id");

                    b.HasKey("UserId", "PostId")
                        .HasName("user_reaction_post_pkey");

                    b.HasIndex("PostId");

                    b.ToTable("user_reaction_post");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.Comment", b =>
                {
                    b.HasOne("OnlineGalerija.PostgresModels.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .HasConstraintName("comment_post_id_fkey");

                    b.HasOne("OnlineGalerija.PostgresModels.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("comment_user_id_fkey");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.Image", b =>
                {
                    b.HasOne("OnlineGalerija.PostgresModels.Post", "Post")
                        .WithMany("Images")
                        .HasForeignKey("PostId")
                        .HasConstraintName("image_post_id_fkey");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.Post", b =>
                {
                    b.HasOne("OnlineGalerija.PostgresModels.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("post_user_id_fkey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.PostHashtag", b =>
                {
                    b.HasOne("OnlineGalerija.PostgresModels.Hashtag", "Hashtag")
                        .WithMany("PostHashtags")
                        .HasForeignKey("HashtagId")
                        .HasConstraintName("post_hashtag_hashtag_id_fkey")
                        .IsRequired();

                    b.HasOne("OnlineGalerija.PostgresModels.Post", "Post")
                        .WithMany("PostHashtags")
                        .HasForeignKey("PostId")
                        .HasConstraintName("post_hashtag_post_id_fkey")
                        .IsRequired();

                    b.Navigation("Hashtag");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.User", b =>
                {
                    b.HasOne("OnlineGalerija.PostgresModels.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("users_role_id_fkey");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.UserFollower", b =>
                {
                    b.HasOne("OnlineGalerija.PostgresModels.User", "Follower")
                        .WithMany("UserFollowerFollowers")
                        .HasForeignKey("FollowerId")
                        .HasConstraintName("user_follower_follower_id_fkey")
                        .IsRequired();

                    b.HasOne("OnlineGalerija.PostgresModels.User", "User")
                        .WithMany("UserFollowerUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("user_follower_user_id_fkey")
                        .IsRequired();

                    b.Navigation("Follower");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.UserReactionComment", b =>
                {
                    b.HasOne("OnlineGalerija.PostgresModels.Comment", "Comment")
                        .WithMany("UserReactionComments")
                        .HasForeignKey("CommentId")
                        .HasConstraintName("user_reaction_comment_comment_id_fkey")
                        .IsRequired();

                    b.HasOne("OnlineGalerija.PostgresModels.User", "User")
                        .WithMany("UserReactionComments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("user_reaction_comment_user_id_fkey")
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.UserReactionPost", b =>
                {
                    b.HasOne("OnlineGalerija.PostgresModels.Post", "Post")
                        .WithMany("UserReactionPosts")
                        .HasForeignKey("PostId")
                        .HasConstraintName("user_reaction_post_post_id_fkey")
                        .IsRequired();

                    b.HasOne("OnlineGalerija.PostgresModels.User", "User")
                        .WithMany("UserReactionPosts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("user_reaction_post_user_id_fkey")
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.Comment", b =>
                {
                    b.Navigation("UserReactionComments");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.Hashtag", b =>
                {
                    b.Navigation("PostHashtags");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("PostHashtags");

                    b.Navigation("UserReactionPosts");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("OnlineGalerija.PostgresModels.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Posts");

                    b.Navigation("UserFollowerFollowers");

                    b.Navigation("UserFollowerUsers");

                    b.Navigation("UserReactionComments");

                    b.Navigation("UserReactionPosts");
                });
#pragma warning restore 612, 618
        }
    }
}
